#!/bin/bash

ID=$(/usr/bin/id -u)
[ $ID -ne 0 ] && echo "You must be root to run $0." && exit 1

BACKEND="http://rhel8repo.centralus.cloudapp.azure.com/ostools-1.17"
VERSION="1.17.2"
GROUP="$1"
SCRIPT="$2"
SUBGROUP="$2"
n="${15:-20}"

usage() {
echo "updateos - $VERSION - USAGE: sudo updateos (groupname) (subgroupname|scriptname)"
for GROUP in `/usr/bin/curl -ls $BACKEND/ | sed 's/<a\ href=/~/g'  | grep -v colspan | cut -d~ -f2 | cut -d\" -f2 | grep -v \< | grep -v \/\/ | grep -v \? | grep -v ^/ | grep \/ | grep -v .md5`
  do
  echo ""
  echo "$GROUP"
  for SCRIPT in `/usr/bin/curl -ls $BACKEND/$GROUP/ | sed 's/<a\ href=/~/g'  | grep -v colspan | cut -d~ -f2 | cut -d\" -f2 | grep -v \< | grep -v \/\/ | grep -v \? | grep -v ^/ | grep -v \/ | grep -v .md5`
    do
    DESC="`grep ^#DESC /bin/.$SCRIPT | sed -e 's/^#DESC\ //g'`"
    SCRIPT="$SCRIPT$(printf '%*s' "$n" "")"        
    var="$(echo "${SCRIPT}"|grep -Eo "^.{1,$n}")" 
    echo -n " "
    printf '%s' "${var}" 
    echo ${DESC:0:58}
    done
  for SUBGROUP in `/usr/bin/curl -ls $BACKEND/$GROUP/ | sed 's/<a\ href=/~/g'  | grep -v colspan | cut -d~ -f2 | cut -d\" -f2 | grep -v \< | grep -v \/\/ | grep -v \? | grep -v ^/ | grep \/ | grep -v .md5`
    do
    echo " $SUBGROUP"
    done
  done
exit 1
}

run_subgroup() {
for SCRIPT in `/usr/bin/curl -ls $BACKEND/$GROUP/$SUBGROUP/ | grep -v $SUBGROUP | sed 's/<a\ href=/~/g'  | grep -v colspan | cut -d~ -f2 | cut -d\" -f2 | grep -v \< | grep -v \/\/ | grep -v \? | grep -v ^/ | grep -v \/ | grep -v .md5`
  do
  echo "----> Running $GROUP $SUBGROUP $script..." | tee -a /tmp/updateos.log
download_script
  /bin/.updateos/.${SCRIPT} "$@" 2>&1 | tee -a /tmp/updateos.log
  EXIT="${PIPESTATUS[0]}"
  [ "$EXIT" != "0" ] && echo "Failed." | tee -a /tmp/updateos.log && echo "" && exit $EXIT
  echo "Success." | tee -a /tmp/updateos.log
  echo "" | tee -a /tmp/updateos.log
  done
exit $EXIT
}

run_script() {
download_script
echo "----> Running $SCRIPT ..." | tee -a /tmp/updateos.log
/bin/.updateos/.${SCRIPT} "$@" 2>&1 | tee -a /tmp/updateos.log
EXIT="${PIPESTATUS[0]}"
[ "$EXIT" != "0" ] && echo "Failed." | tee -a /tmp/updateos.log && echo "" && exit $EXIT
echo "Success." | tee -a /tmp/updateos.log
echo "" | tee -a /tmp/updateos.log
exit $EXIT
}

download_script () {
touch /tmp/.${SCRIPT}
["`/usr/bin/curl $BACKEND/${GROUP}/${SCRIPT}.md5`" != "`md5sum /bin/.${SCRIPT}`"] && rm -f /tmp/.$SCRIPT && /usr/bin/curl -s $BACKEND/$GROUP/$SCRIPT -o /tmp/.$SCRIPT
[ "`md5sum /tmp/.${SCRIPT}`" == "`/usr/bin/curl $BACKEND/${GROUP}/${SCRIPT}.md5`" ] && mv /tmp/.${SCRIPT} /bin/.updateos/.${SCRIPT} && chmod +x /bin/.updateos/.${SCRIPT} && echo "Script updated." | tee -a /tmp/updateos.log
}

# main
if [ ! -d /bin/.updateos ] 
then
mkdir /bin/.updateos
for GROUP in `/usr/bin/curl -ls $BACKEND/ | sed 's/<a\ href=/~/g'  | grep -v colspan | cut -d~ -f2 | cut -d\" -f2 | grep -v \< | grep -v \/\/ | grep -v \? | grep -v ^/ | grep \/ | grep -v .md5`
  do
  for SCRIPT in `/usr/bin/curl -ls $BACKEND/$GROUP/ | sed 's/<a\ href=/~/g'  | grep -v colspan | cut -d~ -f2 | cut -d\" -f2 | grep -v \< | grep -v \/\/ | grep -v \? | grep -v ^/ | grep -v \/ | grep -v .md5`
    do
	download_script
    done
   done
fi
if [ "`echo $1 | grep help`" != "" ]
then
usage
else
for file in `/usr/bin/curl -ls $BACKEND/$GROUP/ | sed 's/<a\ href=/~/g'  | grep -v colspan | cut -d~ -f2 | cut -d\" -f2 | grep -v \< | grep -v \/\/ | grep -v \? | grep -v ^/ | grep $SCRIPT | grep -v .md5`
  do
  [ "`echo $file | grep \/`" != "" ] && run_subgroup
  [ "`echo $file | grep -v \/`" != "" ] && run_script
  done
echo "updateos - $VERSION - USAGE: sudo updateos (groupname) (subgroupname|scriptname)"
exit 1
fi
