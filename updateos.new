#!/bin/bash

ID=$(/usr/bin/id -u)
[ $ID -ne 0 ] && echo "You must be root to run $0." && exit 1

BACKEND="http://rhel8repo.centralus.cloudapp.azure.com/ostools-1.17"
VERSION="1.17.2"
GROUP="$1"
SCRIPT="$2"
SUBGROUP="$2"
n="${15:-24}"

usage() {
echo "updateos - $VERSION"
echo "USAGE: sudo updateos (groupname) (subgroupname|scriptname)"
echo "If a subgroup name is provided, all the scripts (symlinks) in that subgroup will be executed in the order listed."
echo ""
echo "GROUP  SUBGROUP  SCRIPT                  DESCRIPTION"
echo "-----  --------  ------                  -----------"
for GROUP in `/usr/bin/curl -ls $BACKEND/ | sed 's/<a\ href=/~/g'  | grep -v colspan | cut -d~ -f2 | cut -d\" -f2 | grep -v \< | grep -v \/\/ | grep -v \? | grep -v ^/ | grep \/`
  do
  echo "$GROUP"
  for script in `/usr/bin/curl -ls $BACKEND/$GROUP/ | sed 's/<a\ href=/~/g'  | grep -v colspan | cut -d~ -f2 | cut -d\" -f2 | grep -v \< | grep -v \/\/ | grep -v \? | grep -v ^/ | grep -v \/`
    do
    DESC="`grep ^#DESC /tmp/$script | sed -e 's/^#DESC\ //g'`"
    script="$script$(printf '%*s' "$n" "")"        
    var="$(echo "${script}"|grep -Eo "^.{1,$n}")" 
    echo -n "                 "
    printf '%s' "${var}" 
    echo "$DESC"
    done
  for SUBGROUP in `/usr/bin/curl -ls $BACKEND/$GROUP/ | sed 's/<a\ href=/~/g'  | grep -v colspan | cut -d~ -f2 | cut -d\" -f2 | grep -v \< | grep -v \/\/ | grep -v \? | grep -v ^/ | grep \/`
    do
    echo "       $SUBGROUP"
    for script in `/usr/bin/curl -ls $BACKEND/$GROUP/$SUBGROUP/ | sed 's/<a\ href=/~/g'  | grep -v colspan | cut -d~ -f2 | cut -d\" -f2 | grep -v \< | grep -v \/\/ | grep -v \? | grep -v ^/ | grep -v \/`
      do
      echo "                 $script"
      done
    done
  done
exit 1
}

run_subgroup() {
for script in `/usr/bin/curl -ls $BACKEND/$GROUP/ | sed 's/<a\ href=/~/g'  | grep -v colspan | cut -d~ -f2 | cut -d\" -f2 | grep -v \< | grep -v \/\/ | grep -v \? | grep -v ^/ | grep -v \/`
  do
  echo "----> Running $GROUP $SUBGROUP ..." | tee -a /tmp/updateos.log
  /usr/bin/curl -s $BACKEND/$GROUP/$script -o /tmp/.${script}
  chmod +x /tmp/.${script}
  /tmp/.${script} $3 $4 $5 $6 $7 | tee -a /tmp/updateos.log
  [ "$?" != "0" ] && echo "Failed." && echo "" && exit $?
  echo "Success." | tee -a /tmp/updateos.log
  echo "" | tee -a /tmp/updateos.log
  rm -f /tmp/.${script}
  done
exit $?
}

run_script() {
echo "----> Running $SCRIPT ..." | tee -a /tmp/updateos.log
/usr/bin/curl -s $BACKEND/${GROUP}/${SCRIPT} -o /tmp/.${SCRIPT}
[ "`cat /tmp/.${SCRIPT} | grep HTML`" != "" ] && echo "Script does not exist." | tee -a /tmp/updateos.log && rm -f /tmp/.${SCRIPT} && usage
chmod +x /tmp/.${SCRIPT}
/tmp/.${SCRIPT} $3 $4 $5 $6 $7 | tee -a /tmp/updateos.log
[ "$?" != "0" ] && echo "Failed." && echo "" && exit $?
echo "Success." | tee -a /tmp/updateos.log
echo "" | tee -a /tmp/updateos.log
exit $?
}

# main
[ $# -ne 2 ] && usage
[ "$SUBGROUP" == "stage" ] && run_subgroup
run_script
